var documenterSearchIndex = {"docs":
[{"location":"Algorithms/#Network-Analysis-Algorithms-Overview","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms Overview","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"There are a few dynamical properties of particular interest that network approaches can shed some light on. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Existence + uniqueness of steady states\nPersistence\nConcentration Robustness","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Algorithms used by this package to decide these properties are detailed on this page. A significant number of the results can be found in the Foundations of Chemical Reaction Network Theory textbook, by Martin Feinberg[1]. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"In general these properties will depend on the choices of parameters for the system and on the initial conditions (which can be provided as a dictionary, vector, or tuple of Pair, as described in the homepage). Many networks have multiple steady states for some set of rate constants but not others. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Additionally, the dynamical properties of the system may depend on the initial conditions of the network, which define the stoichiometric compatibility class that the network evolves in. The stoichiometric compatibility class is the set of points in concentration space that are reachable from a given initial condition, which is an affine subspace u_0 + S","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"When we say that a network is multistationary, or has the capacity for multiple steady states, what that means is that there is some stoichiometric compatibility class for which this is true. This means that there may be only one or zero steady states in some other stoichiometric compatibility class. The SCC can be inferred from the initial concentrations of the species in a reaction network via the network's conservation laws. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"The summary function for the package is networksummary. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"networksummary","category":"page"},{"location":"Algorithms/#CatalystNetworkAnalysis.networksummary","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.networksummary","text":"networksummary(rn::ReactionSystem; p::VarMapType, u0::VarMapType, mv = false)\n\nSummary of properties that can be inferred from the structure of a reaction network. May give different results depending on whether `p` or `u0` is supplied. The set of functions run are the following: \n- `hasuniquesteadystates`\n- `isconcentrationrobust`\n- `ispersistent`\n- `mixedvolume`\n\nMixed volume may take a very long time to run and is disabled by default. It can be enabled by setting the flag `mv = true`. Note that mixed volume requires an initial condition.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/#Uniqueness-of-Steady-States","page":"Network Analysis Algorithms","title":"Uniqueness of Steady States","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"The functionality that decides uniqueness of steady states is in the function hasuniqueequilibria(rn). The uniqueness of steady states checks proceeds as follows. The function terminates every time a network is conclusively determined to have unique steady states or multi-stationarity.  ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Deficiency one and deficiency zero theorems: a reaction network that satisfies the conditions of these two theorems will be guaranteed to have a unique steady state for every stoichiometric compatibility class.[1] \nDeficiency one and higher deficiency algorithm: Both of these algorithms construct inequality systems that, if satsifiable, would indicate that a reaction network has the ability to admit multiple steady states in a given stoichiometric compatibility class.[2] \nConcordance: This is a graph property that guarantees the uniqueness of steady states, since it guarantees that the species-formation rate function is injective. As a result, there is only one solution to fracdcdt = 0.[2] ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Future desiderata for this check include methods from monotone systems theory,degree theory, and embedded multi-stationary networks - see the [Roadmap] for the package.  ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Other functionality related to the existence and uniqueness of steady states: ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"# CatalystNetworkAnalysis.haspositivesteadystates\n# CatalystNetworkAnalysis.hasperiodicsolutions\nCatalystNetworkAnalysis.hasuniquesteadystates\n# Catalyst.satisfiesdeficiencyzero\n# Catalyst.satisfiesdeficiencyone\n# Catalyst.iscomplexbalanced\n# Catalyst.isdetailedbalanced\nCatalystNetworkAnalysis.mixedvolume\nisconcordant\ndeficiencyonealgorithm","category":"page"},{"location":"Algorithms/#CatalystNetworkAnalysis.hasuniquesteadystates","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.hasuniquesteadystates","text":"hasuniquesteadystates(rn::ReactionSystem)\n\nCheck whether a reaction network has the capacity to admit multiple steady states, for some choice of rate constants. Return codes: \n- :NO_EQUILIBRIUM - no positive equilibrium for any choice of rate constants\n- :STRUCTURALLY_UNIQUE - only one steady state for every SCC, for every choice of rate constants\n- :STRUCTURALLY_MULTIPLE - multiple steady states in a certain SCC guaranteed for any choice of rate constants\n- :KINETICALLY_MULTIPLE - multiple steady states in a certain SCC guaranteed for certain choices of rate constants\n- :POSSIBLY_MULTIPLE - discordant and/or high deficiency, but inconclusive whether there are system parameters that lead to the existence of an SCC with multiple steady states.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/#CatalystNetworkAnalysis.mixedvolume","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.mixedvolume","text":"mixedvolume(rn::ReactionSystem, u0::VarMapType)\n\nCompounds an upper bound on the number of steady states in a particular stoichiometric compatibility class.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/#CatalystNetworkAnalysis.isconcordant","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.isconcordant","text":"isconcordant(rn::ReactionSystem, atol=1e-12)\n\nGiven a reaction network (and an absolute tolerance for the nullspace matrix below which entries should be zero), test whether the reaction network's graph has a property called concordance. A concordant network will not admit multiple equilibria in any stoichiometric compatibility class. The algorithm for this check follows Haixia Ji's PhD thesis, (Ji, 2011).\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/#CatalystNetworkAnalysis.deficiencyonealgorithm","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.deficiencyonealgorithm","text":"deficiencyonealgorithm(rn::ReactionSystem)\n\nDetermine whether a regular deficiency one network will have the ability to admit multiple equilibria and degenerate equilibria. Returns true if so.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Additionally, one might check the functions iscomplexbalanced() and isdetailedbalanced() implemented in the main Catalyst package, which work for kinetic systems (reaction networks with an assignment of parameter values). Both of these conditions are sufficient to guarantee that the reaction network will have unique steady states, for a given choice of parameters, and that these steady states will be asymptotically stable within each stoichiometric compatibility class.[1]","category":"page"},{"location":"Algorithms/#Stability","page":"Network Analysis Algorithms","title":"Stability","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Bistability is a very important property of reaction networks, since switchlike behavior in biological networks is realized through bistability. The network analysis package currently does not have any tooling for stability analysis, but please see this section of the main Catalyst documentation for some tips.","category":"page"},{"location":"Algorithms/#Persistence","page":"Network Analysis Algorithms","title":"Persistence","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"A chemical reaction network is persistent if each species does not \"die out\" - that is, if the initial condition of the network has positive concentration in a given species, that species' concentration will never go to zero. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"It is not currently possible to conclusively determine persistence in every case. The approach used by this package checks the necessary conditions and sufficient conditions outlined in this paper.[4] Many persistent networks will be detectably persistent via this algorithm, and many non-persistent networks will be detectably non-persistent, but the function will return inconclusive in many cases. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"ispersistent\nminimalsiphons","category":"page"},{"location":"Algorithms/#CatalystNetworkAnalysis.ispersistent","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.ispersistent","text":"ispersistent(rs::ReactionSystem)\n\nChecks if a reaction system is persistent, meaning that none of its species with positive concentration will go extinct (asymptotically approach 0). The possible outputs: \n- :PERSISTENT\n- :NOT_PERSISTENT\n- :INCONCLUSIVE: The persistence test is inconclusive; this function currently cannot determine whether this network is persistent or not.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/#CatalystNetworkAnalysis.minimalsiphons","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.minimalsiphons","text":"minimalsiphons(rs::ReactionSystem)\n\nConstructs the set of minimal siphons of a reaction network, where a siphon is a set of species that can be \"switched off,\" i.e. if the species each have concentration 0, the concentration of all the species will remain 0 for all time. A minimal siphon is one that does not contain a siphon as a strict subset.\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"The Petri net algorithm relies on detecting siphons in the network, which follows a SAT-solver approach[5] [6].","category":"page"},{"location":"Algorithms/#Concentration-Robustness","page":"Network Analysis Algorithms","title":"Concentration Robustness","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"A species in a reaction network has concentration robustness if its concentration in any steady state of the reaction network is the same. Species with this property will have the same concentration regardless of initial conditions or perturbations to the system. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Deficiency results: these are very limited to deficiency one networks, in which robust species can be detected from the complex composition matrix. Additionally, there is a necessary deficiency-related condition for networks to have ACR, which can be used to detect networks without ACR[3]. \nAlgebraic results: this class of results relies on results from real algebraic geometry. A network is concentration-robust if the locus of steady states lies entirely within a hyperplane where some species concentration is constant. Often, this boils down to finding basis elements of the form (x_i - alpha) for the steady state ideal[8].","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Like persistence, absolute concentration robustness currently cannot be detected conclusively in every case. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"isconcentrationrobust","category":"page"},{"location":"Algorithms/#CatalystNetworkAnalysis.isconcentrationrobust","page":"Network Analysis Algorithms","title":"CatalystNetworkAnalysis.isconcentrationrobust","text":"isconcentrationrobust(rn::ReactionSystem)\n\nRequires the parameter values be Rational or Integer. Check whether a reaction network has any concentration-robust species. Return codes: \n- :MASS_ACTION_ACR - this species is concentration-robust for the given set of rate constants \n- :GLOBAL_ACR - this species is absolutely concentration-robust for every choice of rate constants\n- :INCONCLUSIVE - the algorithm currently cannot decide whether this network has ACR. One could try calling this function with rate constants provided. \n- :NO_ACR - the reaction network does not have ACR. \n- :INEXACTPARAMS - the algorithm cannot conclude concentration-robustness due to inexact parameters (Floats that are too small)\n\nFollows the approach outlined in [Puente et al. 2023](https://arxiv.org/abs/2401.00078).\n\n\n\n\n\n","category":"function"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"Misc references[9] [10] [11] [12] [13] [14] [15] [16] [17] [18].","category":"page"},{"location":"Algorithms/#References","page":"Network Analysis Algorithms","title":"References","text":"","category":"section"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[1]: Feinberg, M. Foundations of Chemical Reaction Network Theory; Applied Mathematical Sciences; Springer International Publishing: Cham, 2019; Vol. 202. https://doi.org/10.1007/978-3-030-03858-8.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[2]: Ji, H. Uniqueness of Equilibria for Complex Chemical Reaction Networks. Ph.D. Thesis, The Ohio State University, Columbus, OH, 2011. ","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[3]: Eloundou-Mbebi, J. M. O.; Küken, A.; Omranian, N.; Kleessen, S.; Neigenfind, J.; Basler, G.; Nikoloski, Z. A Network Property Necessary for Concentration Robustness. Nat Commun 2016, 7 (1), 13255. https://doi.org/10.1038/ncomms13255.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[4]: Angeli, D.; De Leenheer, P.; Sontag, E. D. A Petri Net Approach to the Study of Persistence in Chemical Reaction Networks. Math Biosci 2007, 210 (2), 598–618. https://doi.org/10.1016/j.mbs.2007.07.003.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[5]: Shiu, A.; Sturmfels, B. Siphons in Chemical Reaction Networks. Bull. Math. Biol. 2010, 72 (6), 1448–1463. https://doi.org/10.1007/s11538-010-9502-y.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[6]: Nabli, F.; Martinez, T.; Fages, F.; Soliman, S. On Enumerating Minimal Siphons in Petri Nets Using CLP and SAT Solvers: Theoretical and Practical Complexity. Constraints 2016, 21 (2), 251–276. https://doi.org/10.1007/s10601-015-9190-1.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[8]: Puente, L. D. G.; Gross, E.; Harrington, H. A.; Johnston, M.; Meshkat, N.; Millán, M. P.; Shiu, A. Absolute Concentration Robustness: Algebra and Geometry. arXiv December 29, 2023. http://arxiv.org/abs/2401.00078 (accessed 2024-09-27).","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[9]: Johnston, M. D.; Müller, S.; Pantea, C. A Deficiency-Based Approach to Parametrizing Positive Equilibria of Biochemical Reaction Systems. arXiv May 23, 2018. http://arxiv.org/abs/1805.09295 (accessed 2024-09-09).","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[10]: Craciun, G.; Jin, J.; Yu, P. Y. An Efficient Characterization of Complex-Balanced, Detailed-Balanced, and Weakly Reversible Systems. SIAM J. Appl. Math. 2020, 80 (1), 183–205. https://doi.org/10.1137/19M1244494.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[11]: Loman, T. E.; Ma, Y.; Ilin, V.; Gowda, S.; Korsbo, N.; Yewale, N.; Rackauckas, C.; Isaacson, S. A. Catalyst: Fast and Flexible Modeling of Reaction Networks.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[12]: Angeli, D.; Ferrell, J. E.; Sontag, E. D. Detection of Multistability, Bifurcations, and Hysteresis in a Large Class of Biological Positive-Feedback Systems. Proceedings of the National Academy of Sciences 2004, 101 (7), 1822–1827. https://doi.org/10.1073/pnas.0308265100.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[13]: Müller, S.; Regensburger, G. Generalized Mass Action Systems: Complex Balancing Equilibria and Sign Vectors of the Stoichiometric and Kinetic-Order Subspaces. SIAM J. Appl. Math. 2012, 72 (6), 1926–1947. https://doi.org/10.1137/110847056.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[14]: Conradi, C.; Feliu, E.; Mincheva, M.; Wiuf, C. Identifying Parameter Regions for Multistationarity. PLoS Comput Biol 2017, 13 (10), e1005751. https://doi.org/10.1371/journal.pcbi.1005751.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[15]: Craciun, G.; Nazarov, F.; Pantea, C. Persistence and Permanence of Mass-Action and Power-Law Dynamical Systems. SIAM J. Appl. Math. 2013, 73 (1), 305–329. https://doi.org/10.1137/100812355.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[16]: Knight, D.; Shinar, G.; Feinberg, M. Sharper Graph-Theoretical Conditions for the Stabilization of Complex Reaction Networks. Math Biosci 2015, 262, 10–27. https://doi.org/10.1016/j.mbs.2015.01.002.","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[17]: Müller, S.; Feliu, E.; Regensburger, G.; Conradi, C.; Shiu, A.; Dickenstein, A. Sign Conditions for Injectivity of Generalized Polynomial Maps with Applications to Chemical Reaction Networks and Real Algebraic Geometry. arXiv October 30, 2014. http://arxiv.org/abs/1311.5493 (accessed 2024-08-15).","category":"page"},{"location":"Algorithms/","page":"Network Analysis Algorithms","title":"Network Analysis Algorithms","text":"[18]: Johnston, M. D. Translated Chemical Reaction Networks. Bull Math Biol 2014, 76 (5), 1081–1116. https://doi.org/10.1007/s11538-014-9947-5.","category":"page"},{"location":"#CatalystNetworkAnalysis.jl-for-Reaction-Network-Analysis","page":"Home","title":"CatalystNetworkAnalysis.jl for Reaction Network Analysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CatalystNetworkAnalysis.jl is a package that provides network analysis functionality for reaction networks built using Catalyst.jl. The algorithms implemented by this package, along with their relevant citations, can be found in the Network Analysis Algorithms Overview  section of the documentation. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Network analysis algorithms infer dynamical properties of reaction networks, such as the existence and uniqueness of steady states, from the graph structure of the network and the structure of their ODEs. This package implements algorithms that take input reaction networks, and perform this analysis. The benefit of this approach is that key properties of the network may be inferred without simulating them, and we can infer properties that are true of the network regardless of its specific choice of reaction rate constants or initial conditions. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The algorithms currently implemented in the package draw from two broad approaches: deficiency theory (developed by Martin Feinberg et al.), which draws explicitly from the graph structure of the network, and approaches drawing from algebraic geometry, which analyzes the set of points in concentration space corresponding to the steady states, as well as the ideal that corresponds to this set of points. More information about the properties, and the algorithms implemented in this package  can be found in the [Algorithms] page. ","category":"page"},{"location":"#Network-Summary","page":"Home","title":"Network Summary","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The main function of the package is networksummary(rn::ReactionSystem), which collects all the dynamical information that can be learned about the reaction network from its network structure into a readable format. To see how it works, let us consider a simple reaction network that displays many curious dynamical properties called the Edelstein network: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using CatalystNetworkAnalysis, Catalyst\nedelstein = @reaction_network begin\n (k1, k2), A <--> 2A\n (k3, k4), A + B <--> C\n (k5, k6), C <--> B\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"The network summary for this reaction network shows the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"networksummary(edelstein)","category":"page"},{"location":"#Specifying-Parameter-Values-and-Initial-Conditions","page":"Home","title":"Specifying Parameter Values and Initial Conditions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Many of the algorithms implemented in this package will optionally take parameter assignments p or initial conditions u0. In some cases, these will be required (e.g. complex balance will require parameters, and mixed volume will require initial conditions). If p or u0 are optional, they will be keyword functions in arguments, and if they are required for a function, they will be a positional argument. The networksummary function will likely have different outputs depending on whether u0 or p or both are provided. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"These will only be accepted in the standardized format of a Dict, a Vector of Pair, or a Tuple of Pair. The keys of the pairs should be either symbols or Symbolics. For example, to provide parameters for the Edelstein network above, any of the following would work: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"pmap = [:k1 => 1., :k2 => 1., :k3 => 1., :k4 => 1., :k5 => 1., :k6 => 1.]\npmap = (:k1 => 1., :k2 => 1., :k3 => 1., :k4 => 1., :k5 => 1., :k6 => 1.)\npmap = Dict([:k1 => 1., :k2 => 1., :k3 => 1., :k4 => 1., :k5 => 1., :k6 => 1.])\npmap = Dict(zip(parameters(edelstein), ones(6))) # Creates dict from symbolic pairs","category":"page"},{"location":"","page":"Home","title":"Home","text":"In order to convert from a symbol dictionary to a Symbolics dictionary, one can use the symmap_to_varmap function from Catalyst. ","category":"page"},{"location":"#Comparisons-to-existing-packages","page":"Home","title":"Comparisons to existing packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A variety of packages for network analysis exist, including the following: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Chemical Reaction Network Toolbox (Feinberg et al.) \nCoNTRoL (Johnston et al.) ","category":"page"},{"location":"#Starting-with-Julia-and-Catalyst","page":"Home","title":"Starting with Julia and Catalyst","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Please see the starting with Julia section of Catalyst.jl's documentation for tips on getting started with Julia in general. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you have a reaction network stored in some other file format, such as .net, SBML, and others, please reference the loading chemical reaction networks tutorial in the Catalyst documentation. There are sections for loading .net and SBML files. Once the reaction network is loaded as a Catalyst ReactionSystem, it can be passed to the network analysis algorithms defined in this function. ","category":"page"},{"location":"ROADMAP/#Roadmap-for-algorithms-to-be-added","page":"Roadmap","title":"Roadmap for algorithms to be added","text":"","category":"section"},{"location":"ROADMAP/#Long-term-dynamical-properties","page":"Roadmap","title":"Long-term dynamical properties","text":"","category":"section"},{"location":"ROADMAP/","page":"Roadmap","title":"Roadmap","text":"Implementing detection for endotactic networks \nDetection for permanence in networks ","category":"page"},{"location":"ROADMAP/#Deciding-multiple-steady-states","page":"Roadmap","title":"Deciding multiple steady states","text":"","category":"section"},{"location":"ROADMAP/","page":"Roadmap","title":"Roadmap","text":"Detecting multistationarity via embedded atoms of multistationarity, see sections 4 and 5 here\nDetecting injectivity (which precludes multiple steady states) via sign conditions\nPreluding multistationarity with degree theory\nPrecluding multistationarity with monotone systems\nSpecies-reaction graph checks for concordance and multistationarity (see section 3)","category":"page"},{"location":"ROADMAP/#Translated-reaction-networks,-analytic/symbolic-results,-steady-state-parameterizations","page":"Roadmap","title":"Translated reaction networks, analytic/symbolic results, steady-state parameterizations","text":"","category":"section"},{"location":"ROADMAP/","page":"Roadmap","title":"Roadmap","text":"Stitching analytic steady states from translated RNs\nInferring parameter regions from translated reaction networks, see here and here\nDetecting multistationarity by looking for sign changes in positive parameterizations\nImproving methods for finding minimum-deficiency translations of reaction networks","category":"page"},{"location":"ROADMAP/#Beyond-Mass-Action","page":"Roadmap","title":"Beyond Mass Action","text":"","category":"section"},{"location":"ROADMAP/","page":"Roadmap","title":"Roadmap","text":"Power law kinetics?\nGeneralized mass action systems \nSystems with parameter-dependent stoichiometric coefficients?","category":"page"}]
}
